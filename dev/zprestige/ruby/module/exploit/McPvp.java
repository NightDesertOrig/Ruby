//Deobfuscated with https://github.com/SimplyProgrammer/Minecraft-Deobfuscator3000 using mappings "C:\Users\user\Desktop\1.12 stable mappings"!

//Decompiled by Procyon!

package dev.zprestige.ruby.module.exploit;

import dev.zprestige.ruby.module.*;
import net.minecraft.client.network.*;
import java.util.*;
import net.minecraft.network.play.client.*;
import net.minecraft.network.*;
import net.minecraft.entity.player.*;
import net.minecraft.util.math.*;
import java.awt.*;
import dev.zprestige.ruby.util.*;

public class McPvp extends Module
{
    BlockPos pos1;
    
    public McPvp() {
        this.pos1 = null;
    }
    
    @Override
    public void onTick() {
        final EntityPlayer entityPlayer = EntityUtil.getTarget(50.0f);
        if (entityPlayer == null) {
            return;
        }
        final int i = (int)Math.floor(Math.random() * 3.0);
        final BlockPos pos = EntityUtil.getPlayerPos(entityPlayer);
        this.pos1 = null;
        switch (i) {
            case 1: {
                Objects.requireNonNull(this.mc.getConnection()).sendPacket((Packet)new CPacketPlayer.Position((double)(pos.getX() + 3), (double)pos.getY(), (double)pos.getZ(), true));
                this.pos1 = new BlockPos(pos.getX() + 3, pos.getY(), pos.getZ());
                break;
            }
            case 2: {
                Objects.requireNonNull(this.mc.getConnection()).sendPacket((Packet)new CPacketPlayer.Position((double)(pos.getX() - 3), (double)pos.getY(), (double)pos.getZ(), true));
                this.pos1 = new BlockPos(pos.getX() - 3, pos.getY(), pos.getZ());
                break;
            }
            case 3: {
                Objects.requireNonNull(this.mc.getConnection()).sendPacket((Packet)new CPacketPlayer.Position((double)pos.getX(), (double)pos.getY(), (double)(pos.getZ() + 3), true));
                this.pos1 = new BlockPos(pos.getX(), pos.getY(), pos.getZ() + 3);
                break;
            }
            case 4: {
                Objects.requireNonNull(this.mc.getConnection()).sendPacket((Packet)new CPacketPlayer.Position((double)pos.getX(), (double)pos.getY(), (double)(pos.getZ() - 3), true));
                this.pos1 = new BlockPos(pos.getX(), pos.getY(), pos.getZ() - 3);
                break;
            }
        }
    }
    
    @Override
    public void onFrame(final float partialTicks) {
        if (this.pos1 == null) {
            return;
        }
        final AxisAlignedBB bb = new AxisAlignedBB(this.pos1).shrink(0.2);
        RenderUtil.drawBBBoxWithHeight(bb, new Color(-1998419201), 100, 2.0f);
        RenderUtil.drawBlockOutlineBBWithHeight(bb, new Color(-1998419201), 1.0f, 2.0f);
    }
}
