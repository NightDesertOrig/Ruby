//Deobfuscated with https://github.com/SimplyProgrammer/Minecraft-Deobfuscator3000 using mappings "C:\Users\user\Desktop\1.12 stable mappings"!

//Decompiled by Procyon!

package dev.zprestige.ruby.module.exploit;

import dev.zprestige.ruby.module.*;
import dev.zprestige.ruby.util.*;
import net.minecraft.client.network.*;
import java.util.*;
import net.minecraft.network.play.client.*;
import net.minecraft.network.*;
import dev.zprestige.ruby.events.*;
import dev.zprestige.ruby.eventbus.annotation.*;

public class WallTeleport extends Module
{
    public boolean hasCollided;
    public boolean willJump;
    public Timer jumpTimer;
    
    public WallTeleport() {
        this.jumpTimer = new Timer();
    }
    
    @Override
    public void onTick() {
        if (this.mc.gameSettings.keyBindForward.isKeyDown() && this.mc.player.collidedHorizontally) {
            final double[] speed = EntityUtil.getSpeed(0.001);
            if (this.willJump && !this.jumpTimer.getTime(100L)) {
                this.mc.player.motionY = 0.0;
                this.mc.player.noClip = true;
            }
            this.mc.player.setPosition(this.mc.player.posX + speed[0], this.mc.player.posY, this.mc.player.posZ + speed[1]);
        }
        if (this.mc.player.collidedHorizontally && this.hasCollided) {
            Objects.requireNonNull(this.mc.getConnection()).sendPacket((Packet)new CPacketPlayer.Position(this.mc.player.posX, this.mc.player.posY + 0.1, this.mc.player.posZ, this.mc.player.onGround));
            this.hasCollided = false;
        }
    }
    
    @RegisterListener
    public void onMove(final MoveEvent event) {
        if (this.nullCheck() || !this.isEnabled() || !this.mc.player.collidedHorizontally) {
            return;
        }
        event.setCancelled(true);
    }
}
